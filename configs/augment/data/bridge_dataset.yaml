
dataset_name: severstal-steel-defect # name of the dataset
dataset_location: ${location.project_home}/datasets/severstal_steel_defect_dataset/test_IROS2024 # dataset path

out_size: 256 # size of dataset
batch_size: ${batch_size} # batch size for each training process
num_workers: ${num_workers} # dataloader workers
dataloader_shuffle: false # enabling the dataset shuffling at dataloader level
seed: 42 # seed for the dataset shuffling

# enable the usage of the reference discriminator
# so in the dataset creation load the relative datasets
use_ref_disc: false # DO NOT CHANGE, the reference discriminator is not needed in the augmentation process

# Setting that enable a beahvior that generate for the same sample different shapes 
# in input to the generator and defects in input to the discriminator.
different_shapes: False ########################################################################################

allow_overlap: false # allow overlap between objects in input masks and on the gt objects # WARNING True not implemented yet!
mask_base_img: ${mask_base_img} # if true zero out the base image where the concat masks are 1s


kind: ${data.dataset_name}

augmentation_sets: null # if not null, the augmentation sets to use for the dataset creation

# position of the base dataset
base_dataset_kwargs:
  root: /coigan/COIGAN-IROS-2024/datasets/brige/test_bridge_imgs

# objects datasets parameters
object_datasets:
  # position of the object datasets and name of each subfolder (class)
  base_path: ${data.dataset_location}/object_datasets
  names: 
    - object_dataset_0
    #- object_dataset_1
    - object_dataset_2
    - object_dataset_3
  classes:
    - object_0
    #- defect_1
    - defect_2
    - defect_3
  binary: true # specify if the datasets are binary format or stright json
  n: 3 #4 # number of object datasets

# shape dataloader parameters
shape_dataloader_kwargs:
  sample_shapes: [0, 1, 2, 3] # [0, 1, 2]
  shape_probs: [0.1, 0.4, 0.4, 0.1] # [0.5, 0.4, 0.1] # [0.4, 0.475, 0.1, 0.025]

# object dataloader parameters
object_dataloader_kwargs:
  sample_defects: [0, 1, 2, 3] # [0, 1, 2]
  defects_probs: [0.1, 0.4, 0.4, 0.1] # [0.5, 0.4, 0.1] # [0.4, 0.475, 0.1, 0.025]

coigan_dataset_kwargs:
  allow_overlap: ${data.allow_overlap} # allow overlap between objects in input masks and on the gt objects
  mask_base_img: ${data.mask_base_img} # if true zero out the base image where the concat masks are 1s
  shuffle: true
  length: ${max_iter}
  mask_noise_generator_kwargs:
    kind: multiscale
    kind_kwargs:
      interpolation: bilinear
      strategy: replace
      scales: [1, 2, 4]
      smooth: ${input_masks_noise_smooth}
      base_generator_kwargs:
        kind: gaussian
        kind_kwargs:
          mean: ${input_masks_noise_mean}
          std: ${input_masks_noise_std}

# ATTENTION:
# this disable the mask noise generator in the inference model
# because it's already executed in the dataloder during the evaluation
mask_noise_generator_kwargs: null

torch_dataloader_kwargs:
  batch_size: ${data.batch_size}
  num_workers: ${data.num_workers}
  pin_memory: true
  drop_last: true
  prefetch_factor: ${prefetch}